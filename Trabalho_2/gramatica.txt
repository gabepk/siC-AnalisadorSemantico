token: WHILE, IF, ELSE, RETURN, STACK, TOP, QUEUE, FIRST, VOID, FLOAT, INT, CHAR
function
    : argument ‘(’ arguments ‘)’ ‘{’ statement RETURN identifier ‘;’ ‘}’
    | argument ‘(’ ‘)’ ‘{’ statement RETURN identifier ‘;’ ‘}’

identifier
: letra(letra | digito)*

letra
: ‘a’ | ‘b’ | ... | ‘z’

digito
: ‘0’ | ‘1’ | ... | ‘9’

identifier_struct
: identifier
| identifier ‘.’ FIRST

type_struct
: type_simple
| type_queue

type_simple: VOID | FLOAT | INT | CHAR

type_queue
: QUEUE ‘<’ type_simple ‘>’

arguments
: argument ‘,’ arguments
| argument
| ε

argument
: type_struct identifier

statement
: declare_identifier
| while_expression
| if_expression
| math_expression
| identifier_struct_expression
| { statements }

statements
: statements statement
| ε

declare_identifier
: argument ’;’

while_expression
: WHILE ‘(’ compare_expression ‘)’ statement

if_expression
: IF ‘(’ compare_expression ‘)’ statement
| IF ‘(’ compare_expression ‘)’ statement ELSE statement

compare_expression
: identifier_struct compare_assignment identifier_struct

compare_assignment: ‘==’ | ‘!=’ | ‘<=’ | ‘>=’ | ‘<’ | ‘>’

math_expression
: identifier ‘=’ factor ‘;’

factor
: identifier_struct
| ‘(’ number_expression ‘)’

number_expressions
: number_expression ‘+’ term
| number_expression ‘-’ term
| term

term
: term ‘*’ factor
| term ‘/’ factor
| factor

identifier_struct_expression
: identifier ‘=’ identifier ‘+’ identifier ‘;’
| identifier ‘=’ identifier ‘-’ identifier ‘;’
