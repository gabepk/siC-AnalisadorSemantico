Não-terminais inúteis na gramática

   assignment_expression
   term
   factor


Terminais sem uso na gramática

   FIRST
   DOT
   ASSIGN
   PLUS
   MINUS
   MULT
   DIV
   ARROW
   SETLAST
   RMVFIRST


Regras inúteis na gramática

   35 assignment_expression: assignment_expression PLUS term
   36                      | assignment_expression MINUS term
   37                      | term

   38 term: term MULT factor
   39     | term DIV factor
   40     | factor

   41 factor: value
   42       | OPEN_PARENT assignment_expression CLOSE_PARENT


Estado 67 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: program function
    2        | function

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES

    4 values: values COMMA value
    5       | value
    6       | %empty

    7 value: NUM_INT
    8      | NUM_FLOAT
    9      | CARACTERE
   10      | IDENTIFIER

   11 type_struct: type_simple
   12            | QUEUE LT type_simple GT

   13 type_simple: VOID
   14            | FLOAT
   15            | INT
   16            | CHAR

   17 arguments: arguments COMMA type_struct IDENTIFIER
   18          | type_struct IDENTIFIER
   19          | %empty

   20 statements: statements statement
   21           | %empty

   22 statement: type_struct IDENTIFIER SEMICOLON
   23          | IDENTIFIER OPEN_PARENT values CLOSE_PARENT SEMICOLON
   24          | IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block
   25          | IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block ELSE block
   26          | WHILE OPEN_PARENT value compare_assignment value CLOSE_PARENT block

   27 block: statement
   28      | OPEN_BRACES statements CLOSE_BRACES

   29 compare_assignment: EQ
   30                   | NEQ
   31                   | LEQ
   32                   | GEQ
   33                   | LT
   34                   | GT


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
NUM_INT (258) 7
NUM_FLOAT (259) 8
CARACTERE (260) 9
IDENTIFIER (261) 3 10 17 18 22 23
WHILE (262) 26
IF (263) 24 25
ELSE (264) 25
RETURN (265) 3
QUEUE (266) 12
FIRST (267)
VOID (268) 13
FLOAT (269) 14
INT (270) 15
CHAR (271) 16
DOT (272)
SEMICOLON (273) 3 22 23
COMMA (274) 4 17
OPEN_BRACES (275) 3 28
CLOSE_BRACES (276) 3 28
OPEN_PARENT (277) 3 23 24 25 26
CLOSE_PARENT (278) 3 23 24 25 26
EQ (279) 29
NEQ (280) 30
LEQ (281) 31
GEQ (282) 32
LT (283) 12 33
GT (284) 12 34
ASSIGN (285)
PLUS (286)
MINUS (287)
MULT (288)
DIV (289)
ARROW (290)
SETLAST (291)
RMVFIRST (292)


Não terminais com as regras onde eles aparecem

$accept (38)
    à esquerda: 0
program (39)
    à esquerda: 1 2, à direita: 0 1
function (40)
    à esquerda: 3, à direita: 1 2
values (41)
    à esquerda: 4 5 6, à direita: 4 23
value (42)
    à esquerda: 7 8 9 10, à direita: 3 4 5 24 25 26
type_struct (43)
    à esquerda: 11 12, à direita: 3 17 18 22
type_simple (44)
    à esquerda: 13 14 15 16, à direita: 11 12
arguments (45)
    à esquerda: 17 18 19, à direita: 3 17
statements (46)
    à esquerda: 20 21, à direita: 3 20 28
statement (47)
    à esquerda: 22 23 24 25 26, à direita: 20 27
block (48)
    à esquerda: 27 28, à direita: 24 25 26
compare_assignment (49)
    à esquerda: 29 30 31 32 33 34, à direita: 24 25 26


Estado 0

    0 $accept: . program $end

    QUEUE  deslocar, e ir ao estado 1
    VOID   deslocar, e ir ao estado 2
    FLOAT  deslocar, e ir ao estado 3
    INT    deslocar, e ir ao estado 4
    CHAR   deslocar, e ir ao estado 5

    program      ir ao estado 6
    function     ir ao estado 7
    type_struct  ir ao estado 8
    type_simple  ir ao estado 9


Estado 1

   12 type_struct: QUEUE . LT type_simple GT

    LT  deslocar, e ir ao estado 10


Estado 2

   13 type_simple: VOID .

    $padrão  reduzir usando a regra 13 (type_simple)


Estado 3

   14 type_simple: FLOAT .

    $padrão  reduzir usando a regra 14 (type_simple)


Estado 4

   15 type_simple: INT .

    $padrão  reduzir usando a regra 15 (type_simple)


Estado 5

   16 type_simple: CHAR .

    $padrão  reduzir usando a regra 16 (type_simple)


Estado 6

    0 $accept: program . $end
    1 program: program . function

    $end   deslocar, e ir ao estado 11
    QUEUE  deslocar, e ir ao estado 1
    VOID   deslocar, e ir ao estado 2
    FLOAT  deslocar, e ir ao estado 3
    INT    deslocar, e ir ao estado 4
    CHAR   deslocar, e ir ao estado 5

    function     ir ao estado 12
    type_struct  ir ao estado 8
    type_simple  ir ao estado 9


Estado 7

    2 program: function .

    $padrão  reduzir usando a regra 2 (program)


Estado 8

    3 function: type_struct . IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES

    IDENTIFIER  deslocar, e ir ao estado 13


Estado 9

   11 type_struct: type_simple .

    $padrão  reduzir usando a regra 11 (type_struct)


Estado 10

   12 type_struct: QUEUE LT . type_simple GT

    VOID   deslocar, e ir ao estado 2
    FLOAT  deslocar, e ir ao estado 3
    INT    deslocar, e ir ao estado 4
    CHAR   deslocar, e ir ao estado 5

    type_simple  ir ao estado 14


Estado 11

    0 $accept: program $end .

    $padrão  aceitar


Estado 12

    1 program: program function .

    $padrão  reduzir usando a regra 1 (program)


Estado 13

    3 function: type_struct IDENTIFIER . OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES

    OPEN_PARENT  deslocar, e ir ao estado 15


Estado 14

   12 type_struct: QUEUE LT type_simple . GT

    GT  deslocar, e ir ao estado 16


Estado 15

    3 function: type_struct IDENTIFIER OPEN_PARENT . arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES

    QUEUE  deslocar, e ir ao estado 1
    VOID   deslocar, e ir ao estado 2
    FLOAT  deslocar, e ir ao estado 3
    INT    deslocar, e ir ao estado 4
    CHAR   deslocar, e ir ao estado 5

    $padrão  reduzir usando a regra 19 (arguments)

    type_struct  ir ao estado 17
    type_simple  ir ao estado 9
    arguments    ir ao estado 18


Estado 16

   12 type_struct: QUEUE LT type_simple GT .

    $padrão  reduzir usando a regra 12 (type_struct)


Estado 17

   18 arguments: type_struct . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 19


Estado 18

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments . CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES
   17 arguments: arguments . COMMA type_struct IDENTIFIER

    COMMA         deslocar, e ir ao estado 20
    CLOSE_PARENT  deslocar, e ir ao estado 21


Estado 19

   18 arguments: type_struct IDENTIFIER .

    $padrão  reduzir usando a regra 18 (arguments)


Estado 20

   17 arguments: arguments COMMA . type_struct IDENTIFIER

    QUEUE  deslocar, e ir ao estado 1
    VOID   deslocar, e ir ao estado 2
    FLOAT  deslocar, e ir ao estado 3
    INT    deslocar, e ir ao estado 4
    CHAR   deslocar, e ir ao estado 5

    type_struct  ir ao estado 22
    type_simple  ir ao estado 9


Estado 21

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT . OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES

    OPEN_BRACES  deslocar, e ir ao estado 23


Estado 22

   17 arguments: arguments COMMA type_struct . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 24


Estado 23

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES . statements RETURN value SEMICOLON CLOSE_BRACES

    $padrão  reduzir usando a regra 21 (statements)

    statements  ir ao estado 25


Estado 24

   17 arguments: arguments COMMA type_struct IDENTIFIER .

    $padrão  reduzir usando a regra 17 (arguments)


Estado 25

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements . RETURN value SEMICOLON CLOSE_BRACES
   20 statements: statements . statement

    IDENTIFIER  deslocar, e ir ao estado 26
    WHILE       deslocar, e ir ao estado 27
    IF          deslocar, e ir ao estado 28
    RETURN      deslocar, e ir ao estado 29
    QUEUE       deslocar, e ir ao estado 1
    VOID        deslocar, e ir ao estado 2
    FLOAT       deslocar, e ir ao estado 3
    INT         deslocar, e ir ao estado 4
    CHAR        deslocar, e ir ao estado 5

    type_struct  ir ao estado 30
    type_simple  ir ao estado 9
    statement    ir ao estado 31


Estado 26

   23 statement: IDENTIFIER . OPEN_PARENT values CLOSE_PARENT SEMICOLON

    OPEN_PARENT  deslocar, e ir ao estado 32


Estado 27

   26 statement: WHILE . OPEN_PARENT value compare_assignment value CLOSE_PARENT block

    OPEN_PARENT  deslocar, e ir ao estado 33


Estado 28

   24 statement: IF . OPEN_PARENT value compare_assignment value CLOSE_PARENT block
   25          | IF . OPEN_PARENT value compare_assignment value CLOSE_PARENT block ELSE block

    OPEN_PARENT  deslocar, e ir ao estado 34


Estado 29

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN . value SEMICOLON CLOSE_BRACES

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 39


Estado 30

   22 statement: type_struct . IDENTIFIER SEMICOLON

    IDENTIFIER  deslocar, e ir ao estado 40


Estado 31

   20 statements: statements statement .

    $padrão  reduzir usando a regra 20 (statements)


Estado 32

   23 statement: IDENTIFIER OPEN_PARENT . values CLOSE_PARENT SEMICOLON

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    $padrão  reduzir usando a regra 6 (values)

    values  ir ao estado 41
    value   ir ao estado 42


Estado 33

   26 statement: WHILE OPEN_PARENT . value compare_assignment value CLOSE_PARENT block

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 43


Estado 34

   24 statement: IF OPEN_PARENT . value compare_assignment value CLOSE_PARENT block
   25          | IF OPEN_PARENT . value compare_assignment value CLOSE_PARENT block ELSE block

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 44


Estado 35

    7 value: NUM_INT .

    $padrão  reduzir usando a regra 7 (value)


Estado 36

    8 value: NUM_FLOAT .

    $padrão  reduzir usando a regra 8 (value)


Estado 37

    9 value: CARACTERE .

    $padrão  reduzir usando a regra 9 (value)


Estado 38

   10 value: IDENTIFIER .

    $padrão  reduzir usando a regra 10 (value)


Estado 39

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value . SEMICOLON CLOSE_BRACES

    SEMICOLON  deslocar, e ir ao estado 45


Estado 40

   22 statement: type_struct IDENTIFIER . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 46


Estado 41

    4 values: values . COMMA value
   23 statement: IDENTIFIER OPEN_PARENT values . CLOSE_PARENT SEMICOLON

    COMMA         deslocar, e ir ao estado 47
    CLOSE_PARENT  deslocar, e ir ao estado 48


Estado 42

    5 values: value .

    $padrão  reduzir usando a regra 5 (values)


Estado 43

   26 statement: WHILE OPEN_PARENT value . compare_assignment value CLOSE_PARENT block

    EQ   deslocar, e ir ao estado 49
    NEQ  deslocar, e ir ao estado 50
    LEQ  deslocar, e ir ao estado 51
    GEQ  deslocar, e ir ao estado 52
    LT   deslocar, e ir ao estado 53
    GT   deslocar, e ir ao estado 54

    compare_assignment  ir ao estado 55


Estado 44

   24 statement: IF OPEN_PARENT value . compare_assignment value CLOSE_PARENT block
   25          | IF OPEN_PARENT value . compare_assignment value CLOSE_PARENT block ELSE block

    EQ   deslocar, e ir ao estado 49
    NEQ  deslocar, e ir ao estado 50
    LEQ  deslocar, e ir ao estado 51
    GEQ  deslocar, e ir ao estado 52
    LT   deslocar, e ir ao estado 53
    GT   deslocar, e ir ao estado 54

    compare_assignment  ir ao estado 56


Estado 45

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON . CLOSE_BRACES

    CLOSE_BRACES  deslocar, e ir ao estado 57


Estado 46

   22 statement: type_struct IDENTIFIER SEMICOLON .

    $padrão  reduzir usando a regra 22 (statement)


Estado 47

    4 values: values COMMA . value

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 58


Estado 48

   23 statement: IDENTIFIER OPEN_PARENT values CLOSE_PARENT . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 59


Estado 49

   29 compare_assignment: EQ .

    $padrão  reduzir usando a regra 29 (compare_assignment)


Estado 50

   30 compare_assignment: NEQ .

    $padrão  reduzir usando a regra 30 (compare_assignment)


Estado 51

   31 compare_assignment: LEQ .

    $padrão  reduzir usando a regra 31 (compare_assignment)


Estado 52

   32 compare_assignment: GEQ .

    $padrão  reduzir usando a regra 32 (compare_assignment)


Estado 53

   33 compare_assignment: LT .

    $padrão  reduzir usando a regra 33 (compare_assignment)


Estado 54

   34 compare_assignment: GT .

    $padrão  reduzir usando a regra 34 (compare_assignment)


Estado 55

   26 statement: WHILE OPEN_PARENT value compare_assignment . value CLOSE_PARENT block

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 60


Estado 56

   24 statement: IF OPEN_PARENT value compare_assignment . value CLOSE_PARENT block
   25          | IF OPEN_PARENT value compare_assignment . value CLOSE_PARENT block ELSE block

    NUM_INT     deslocar, e ir ao estado 35
    NUM_FLOAT   deslocar, e ir ao estado 36
    CARACTERE   deslocar, e ir ao estado 37
    IDENTIFIER  deslocar, e ir ao estado 38

    value  ir ao estado 61


Estado 57

    3 function: type_struct IDENTIFIER OPEN_PARENT arguments CLOSE_PARENT OPEN_BRACES statements RETURN value SEMICOLON CLOSE_BRACES .

    $padrão  reduzir usando a regra 3 (function)


Estado 58

    4 values: values COMMA value .

    $padrão  reduzir usando a regra 4 (values)


Estado 59

   23 statement: IDENTIFIER OPEN_PARENT values CLOSE_PARENT SEMICOLON .

    $padrão  reduzir usando a regra 23 (statement)


Estado 60

   26 statement: WHILE OPEN_PARENT value compare_assignment value . CLOSE_PARENT block

    CLOSE_PARENT  deslocar, e ir ao estado 62


Estado 61

   24 statement: IF OPEN_PARENT value compare_assignment value . CLOSE_PARENT block
   25          | IF OPEN_PARENT value compare_assignment value . CLOSE_PARENT block ELSE block

    CLOSE_PARENT  deslocar, e ir ao estado 63


Estado 62

   26 statement: WHILE OPEN_PARENT value compare_assignment value CLOSE_PARENT . block

    IDENTIFIER   deslocar, e ir ao estado 26
    WHILE        deslocar, e ir ao estado 27
    IF           deslocar, e ir ao estado 28
    QUEUE        deslocar, e ir ao estado 1
    VOID         deslocar, e ir ao estado 2
    FLOAT        deslocar, e ir ao estado 3
    INT          deslocar, e ir ao estado 4
    CHAR         deslocar, e ir ao estado 5
    OPEN_BRACES  deslocar, e ir ao estado 64

    type_struct  ir ao estado 30
    type_simple  ir ao estado 9
    statement    ir ao estado 65
    block        ir ao estado 66


Estado 63

   24 statement: IF OPEN_PARENT value compare_assignment value CLOSE_PARENT . block
   25          | IF OPEN_PARENT value compare_assignment value CLOSE_PARENT . block ELSE block

    IDENTIFIER   deslocar, e ir ao estado 26
    WHILE        deslocar, e ir ao estado 27
    IF           deslocar, e ir ao estado 28
    QUEUE        deslocar, e ir ao estado 1
    VOID         deslocar, e ir ao estado 2
    FLOAT        deslocar, e ir ao estado 3
    INT          deslocar, e ir ao estado 4
    CHAR         deslocar, e ir ao estado 5
    OPEN_BRACES  deslocar, e ir ao estado 64

    type_struct  ir ao estado 30
    type_simple  ir ao estado 9
    statement    ir ao estado 65
    block        ir ao estado 67


Estado 64

   28 block: OPEN_BRACES . statements CLOSE_BRACES

    $padrão  reduzir usando a regra 21 (statements)

    statements  ir ao estado 68


Estado 65

   27 block: statement .

    $padrão  reduzir usando a regra 27 (block)


Estado 66

   26 statement: WHILE OPEN_PARENT value compare_assignment value CLOSE_PARENT block .

    $padrão  reduzir usando a regra 26 (statement)


Estado 67

   24 statement: IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block .
   25          | IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block . ELSE block

    ELSE  deslocar, e ir ao estado 69

    ELSE      [reduzir usando a regra 24 (statement)]
    $padrão  reduzir usando a regra 24 (statement)


Estado 68

   20 statements: statements . statement
   28 block: OPEN_BRACES statements . CLOSE_BRACES

    IDENTIFIER    deslocar, e ir ao estado 26
    WHILE         deslocar, e ir ao estado 27
    IF            deslocar, e ir ao estado 28
    QUEUE         deslocar, e ir ao estado 1
    VOID          deslocar, e ir ao estado 2
    FLOAT         deslocar, e ir ao estado 3
    INT           deslocar, e ir ao estado 4
    CHAR          deslocar, e ir ao estado 5
    CLOSE_BRACES  deslocar, e ir ao estado 70

    type_struct  ir ao estado 30
    type_simple  ir ao estado 9
    statement    ir ao estado 31


Estado 69

   25 statement: IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block ELSE . block

    IDENTIFIER   deslocar, e ir ao estado 26
    WHILE        deslocar, e ir ao estado 27
    IF           deslocar, e ir ao estado 28
    QUEUE        deslocar, e ir ao estado 1
    VOID         deslocar, e ir ao estado 2
    FLOAT        deslocar, e ir ao estado 3
    INT          deslocar, e ir ao estado 4
    CHAR         deslocar, e ir ao estado 5
    OPEN_BRACES  deslocar, e ir ao estado 64

    type_struct  ir ao estado 30
    type_simple  ir ao estado 9
    statement    ir ao estado 65
    block        ir ao estado 71


Estado 70

   28 block: OPEN_BRACES statements CLOSE_BRACES .

    $padrão  reduzir usando a regra 28 (block)


Estado 71

   25 statement: IF OPEN_PARENT value compare_assignment value CLOSE_PARENT block ELSE block .

    $padrão  reduzir usando a regra 25 (statement)
